properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '',
        artifactNumToKeepStr: '',
        numToKeepStr: '2')),
            disableConcurrentBuilds(),
            disableResume(),
            pipelineTriggers([pollSCM('H/5 * * * *')])])

node {

    // Tämä Checkout on sama kuin omatFunktiot.checkoutHarja muuten paitsi otetaan vain Jenkins kansion sisältö.
    // Tämä pitää tehdä ennen, kuin groovy filejä voi ladata workspacesta
    checkout([poll: true,
              scm : [$class                           : 'GitSCM',
                     branches                         : [[name: '*/test-stg']],
                     doGenerateSubmoduleConfigurations: false,
                     extensions                       : [[$class: 'CheckoutOption', timeout: 15],
                                                         [$class: 'CloneOption', depth: 0, noTags: false, reference: '', shallow: true, timeout: 15],
                                                         [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'Jenkins/*']]]],
                     submoduleCfg                     : [],
                     userRemoteConfigs                : [[url: 'https://github.com/finnishtransportagency/harja.git']]]])

    def omatFunktiot = load "Jenkins/skriptit/Tyokalut.groovy"
    def omatVarit = load "Jenkins/skriptit/Vars.groovy"

    println "stg-test branch"

    def jenkinsinBuildNumber = currentBuild.number
    Boolean muutosTapahtui = omatFunktiot.muutosTapahtuiHarjaan(omatVarit.kaynnistaja.trim())

    // Lisää mvn pathiin
    env.PATH = "${env.JENKINS_HOME}/tools/hudson.tasks.Maven_MavenInstallation/Maven_3.5.4/bin:${env.PATH}"

    if (omatVarit.muutosTapahtui) {
        dir('Harja') {
            // Tämä Checkout on sama kuin omatFunktiot.checkoutHarja, mutta tämä pitää tehdä ennen, kuin tuota fileä voi ladata workspacesta
            checkout([poll: true,
                      scm : [$class                           : 'GitSCM',
                             branches                         : [[name: '*/test-stg']],
                             doGenerateSubmoduleConfigurations: false,
                             extensions                       : [[$class: 'CheckoutOption', timeout: 15],
                                                                 [$class: 'CloneOption', depth: 0, noTags: false, reference: '', shallow: true, timeout: 15]],
                             submoduleCfg                     : [],
                             userRemoteConfigs                : [[url: 'https://github.com/finnishtransportagency/harja.git']]]])

            env.TESTI_BRANCH = true
            /*
             * TESTIKANNAN LUOMINEN
             */

            stage(omatVarit.testikannanLuonti) {
                if (omatVarit.testikannanLuontiAjetaan) {
                    omatFunktiot.ajaTestikannanLuonti(omatVarit.testikannanLuonti)
                }
            }

            /*
             * TESTIEN AJAMINEN JA JAR:IN LUOMINEN
             */

            stage(omatVarit.jarJaTestit) {
                if (omatVarit.jarJaTestitAjetaan) {
                    omatFunktiot.ajaJarJaTestit(omatVarit.jarJaTestit)
                }
            }

            /*
             * TESTISERVERIKANNAN LUOMINEN
             */

            stage(omatVarit.testiserverinKannanLuonti) {
                if (omatVarit.testiserverinKannanLuontiAjetaan) {
                    omatFunktiot.ajaTestiserverinKanta(omatVarit.testiserverinKannanLuonti)
                }
            }
        }

        dir('CI') {
            omatFunktiot.checkoutCI()
            /*
             * TESTISERVERIAPPIKSEN DEPLOYAAMINEN
             */

            stage(omatVarit.testiserverinAppLuonti) {
                if (omatVarit.testiserverinAppLuontiAjetaan) {
                    omatFunktiot.ajaTestiserverinApp(omatVarit.testiserverinAppLuonti, jenkinsinBuildNumber)
                }
            }
        }

        dir('E2E') {
            omatFunktiot.checkoutE2E()
            /*
             * E2E TESTIT
             */
            stage(omatVarit.e2eTestit) {
                if (omatVarit.e2eTestitAjetaan) {
                    omatFunktiot.ajaE2ETestit(omatVarit.e2eTestit)
                }
            }
        }

        dir('Harja') {
            /*
             * STAGESERVERIKANNAN LUOMINEN
             */

            stage(omatVarit.stagingserverinKannanLuonti) {
                if (omatVarit.stagingserverinKannanLuontiAjetaan) {
                    omatFunktiot.ajaStagingserverinKanta(omatVarit.stagingserverinKannanLuonti)
                }
            }
        }

        dir('CI') {
            /*
             * STAGING SERVERIAPPIKSEN DEPLOYAAMINEN
             */

            stage(omatVarit.stagingserverinAppLuonti) {
                if (omatVarit.stagingserverinAppLuontiAjetaan) {
                    omatFunktiot.ajaStagingserverinApp(omatVarit.stagingserverinAppLuonti, jenkinsinBuildNumber)
                }
            }
        }

        /*
         * SIIVOTAAN WORKSPACE
         */

        stage('Siivoa workspace') {
           cleanWs()
        }
    }
}